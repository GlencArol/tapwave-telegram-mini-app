{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/telegram.ts"],"sourcesContent":["'use client';\n\nimport { TelegramUser, TelegramWebAppData } from '@/types/telegram';\n\nexport class TelegramService {\n  private static instance: TelegramService;\n  private isInitialized = false;\n\n  static getInstance(): TelegramService {\n    if (!TelegramService.instance) {\n      TelegramService.instance = new TelegramService();\n    }\n    return TelegramService.instance;\n  }\n\n  initialize(): void {\n    if (typeof window !== 'undefined' && window.Telegram?.WebApp) {\n      window.Telegram.WebApp.ready();\n      window.Telegram.WebApp.expand();\n      this.isInitialized = true;\n      \n      // Apply theme colors\n      this.applyTheme();\n    }\n  }\n\n  private applyTheme(): void {\n    const webApp = this.getWebApp();\n    if (!webApp) return;\n\n    const theme = webApp.themeParams;\n    const root = document.documentElement;\n\n    if (theme.bg_color) {\n      root.style.setProperty('--tg-bg-color', theme.bg_color);\n    }\n    if (theme.text_color) {\n      root.style.setProperty('--tg-text-color', theme.text_color);\n    }\n    if (theme.hint_color) {\n      root.style.setProperty('--tg-hint-color', theme.hint_color);\n    }\n    if (theme.link_color) {\n      root.style.setProperty('--tg-link-color', theme.link_color);\n    }\n    if (theme.button_color) {\n      root.style.setProperty('--tg-button-color', theme.button_color);\n    }\n    if (theme.button_text_color) {\n      root.style.setProperty('--tg-button-text-color', theme.button_text_color);\n    }\n  }\n\n  getWebApp() {\n    if (typeof window !== 'undefined' && window.Telegram?.WebApp) {\n      return window.Telegram.WebApp;\n    }\n    return null;\n  }\n\n  getUser(): TelegramUser | null {\n    const webApp = this.getWebApp();\n    return webApp?.initDataUnsafe?.user || null;\n  }\n\n  getInitData(): string {\n    const webApp = this.getWebApp();\n    return webApp?.initData || '';\n  }\n\n  getInitDataUnsafe(): TelegramWebAppData | null {\n    const webApp = this.getWebApp();\n    return webApp?.initDataUnsafe || null;\n  }\n\n  showMainButton(text: string, callback: () => void): void {\n    const webApp = this.getWebApp();\n    if (webApp?.MainButton) {\n      webApp.MainButton.setText(text);\n      webApp.MainButton.show();\n      webApp.MainButton.onClick(callback);\n    }\n  }\n\n  hideMainButton(): void {\n    const webApp = this.getWebApp();\n    if (webApp?.MainButton) {\n      webApp.MainButton.hide();\n    }\n  }\n\n  showBackButton(callback: () => void): void {\n    const webApp = this.getWebApp();\n    if (webApp?.BackButton) {\n      webApp.BackButton.show();\n      webApp.BackButton.onClick(callback);\n    }\n  }\n\n  hideBackButton(): void {\n    const webApp = this.getWebApp();\n    if (webApp?.BackButton) {\n      webApp.BackButton.hide();\n    }\n  }\n\n  showAlert(message: string, callback?: () => void): void {\n    const webApp = this.getWebApp();\n    if (webApp?.showAlert) {\n      webApp.showAlert(message, callback);\n    }\n  }\n\n  showConfirm(message: string, callback: (confirmed: boolean) => void): void {\n    const webApp = this.getWebApp();\n    if (webApp?.showConfirm) {\n      webApp.showConfirm(message, callback);\n    }\n  }\n\n  sendData(data: string): void {\n    const webApp = this.getWebApp();\n    if (webApp?.sendData) {\n      webApp.sendData(data);\n    }\n  }\n\n  triggerHapticFeedback(type: 'light' | 'medium' | 'heavy' | 'rigid' | 'soft'): void {\n    const webApp = this.getWebApp();\n    if (webApp?.HapticFeedback?.impactOccurred) {\n      webApp.HapticFeedback.impactOccurred(type);\n    }\n  }\n\n  triggerNotificationFeedback(type: 'error' | 'success' | 'warning'): void {\n    const webApp = this.getWebApp();\n    if (webApp?.HapticFeedback?.notificationOccurred) {\n      webApp.HapticFeedback.notificationOccurred(type);\n    }\n  }\n\n  openLink(url: string): void {\n    const webApp = this.getWebApp();\n    if (webApp?.openLink) {\n      webApp.openLink(url);\n    }\n  }\n\n  openTelegramLink(url: string): void {\n    const webApp = this.getWebApp();\n    if (webApp?.openTelegramLink) {\n      webApp.openTelegramLink(url);\n    }\n  }\n\n  close(): void {\n    const webApp = this.getWebApp();\n    if (webApp?.close) {\n      webApp.close();\n    }\n  }\n\n  isReady(): boolean {\n    return this.isInitialized && this.getWebApp() !== null;\n  }\n\n  getColorScheme(): 'light' | 'dark' {\n    const webApp = this.getWebApp();\n    return webApp?.colorScheme || 'light';\n  }\n\n  getVersion(): string {\n    const webApp = this.getWebApp();\n    return webApp?.version || '6.0';\n  }\n\n  getPlatform(): string {\n    const webApp = this.getWebApp();\n    return webApp?.platform || 'unknown';\n  }\n}\n\nexport default TelegramService;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/AdComponent.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\nimport TelegramService from '@/lib/telegram'\n\ninterface AdComponentProps {\n  onAdCompleted?: (reward: number) => void\n}\n\nexport default function AdComponent({ onAdCompleted }: AdComponentProps) {\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [adLoaded, setAdLoaded] = useState(false)\n  const [rewardEarned, setRewardEarned] = useState<number | null>(null)\n\n  useEffect(() => {\n    // Load Adsgram script\n    const script = document.createElement('script')\n    script.src = 'https://sad.adsgram.ai/js/sad.min.js'\n    script.async = true\n    script.onload = () => {\n      setAdLoaded(true)\n      console.log('Adsgram script loaded successfully')\n    }\n    script.onerror = () => {\n      setAdLoaded(false)\n      setError('Failed to load ad service')\n      console.error('Failed to load Adsgram script')\n    }\n    document.head.appendChild(script)\n\n    return () => {\n      // Cleanup script on unmount\n      try {\n        document.head.removeChild(script)\n      } catch (e) {\n        // Script might already be removed\n      }\n    }\n  }, [])\n\n  const watchAd = async () => {\n    try {\n      setLoading(true)\n      setError(null)\n      setRewardEarned(null)\n\n      const telegramService = TelegramService.getInstance()\n      const user = telegramService.getUser()\n      \n      if (!user) {\n        setError('User not authenticated')\n        return\n      }\n\n      // Check if Adsgram is available\n      if (typeof window !== 'undefined' && (window as any).Adsgram) {\n        const adsgram = (window as any).Adsgram\n        \n        try {\n          // Initialize Adsgram with publisher ID\n          await adsgram.init({\n            blockId: process.env.NEXT_PUBLIC_ADSGRAM_PUBLISHER_ID || 'demo-block-id',\n            debug: process.env.NODE_ENV === 'development'\n          })\n\n          // Show the ad\n          const adResult = await adsgram.show()\n          \n          if (adResult && adResult.done) {\n            // Ad was successfully viewed - grant reward\n            const rewardAmount = 10 // Base reward amount\n            \n            const response = await fetch('/api/rewards/grant', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({\n                userId: user.id,\n                type: 'ad_view',\n                amount: rewardAmount,\n                source: 'adsgram',\n                traceId: adResult.trace_id || Date.now().toString(),\n                description: 'Reward for watching advertisement'\n              }),\n            })\n\n            if (response.ok) {\n              const result = await response.json()\n              setRewardEarned(rewardAmount)\n              \n              // Trigger success haptic feedback\n              telegramService.triggerNotificationFeedback('success')\n              \n              // Call callback if provided\n              if (onAdCompleted) {\n                onAdCompleted(rewardAmount)\n              }\n            } else {\n              const errorData = await response.json()\n              setError(errorData.error || 'Failed to grant reward')\n            }\n          } else {\n            setError('Ad was not completed successfully')\n          }\n        } catch (adsgramError) {\n          console.error('Adsgram error:', adsgramError)\n          setError('Failed to display advertisement')\n        }\n      } else {\n        // Fallback for development or when Adsgram is not available\n        console.warn('Adsgram not available, using mock ad')\n        \n        // Simulate ad viewing delay\n        await new Promise(resolve => setTimeout(resolve, 2000))\n        \n        const mockReward = 5 // Reduced reward for mock ads\n        setRewardEarned(mockReward)\n        \n        if (onAdCompleted) {\n          onAdCompleted(mockReward)\n        }\n      }\n    } catch (err) {\n      console.error('Ad viewing error:', err)\n      setError(err instanceof Error ? err.message : 'Failed to load advertisement')\n      \n      // Trigger error haptic feedback\n      const telegramService = TelegramService.getInstance()\n      telegramService.triggerNotificationFeedback('error')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"bg-gradient-to-r from-purple-500 to-pink-500 rounded-2xl p-6 text-white\">\n      <h3 className=\"text-xl font-semibold mb-2\">Watch Ads & Earn 💰</h3>\n      <p className=\"text-purple-100 mb-4\">\n        Earn coins by watching advertisements from our partners\n      </p>\n      \n      <div className=\"space-y-4\">\n        <div className=\"bg-white/20 backdrop-blur-sm rounded-xl p-4\">\n          <div className=\"flex items-center justify-between mb-3\">\n            <span className=\"font-medium\">Reward per ad:</span>\n            <span className=\"text-xl font-bold\">+10 coins</span>\n          </div>\n          \n          {adLoaded ? (\n            <button\n              onClick={watchAd}\n              disabled={loading}\n              className=\"w-full bg-white text-purple-600 px-6 py-3 rounded-xl font-semibold hover:bg-purple-50 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 transform hover:scale-105 active:scale-95\"\n            >\n              {loading ? (\n                <div className=\"flex items-center justify-center\">\n                  <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-purple-600 mr-2\"></div>\n                  Loading Ad...\n                </div>\n              ) : (\n                'Watch Advertisement'\n              )}\n            </button>\n          ) : (\n            <div className=\"text-center py-3\">\n              <div className=\"animate-pulse\">\n                <div className=\"h-4 bg-white/30 rounded mb-2\"></div>\n                <div className=\"h-4 bg-white/20 rounded w-3/4 mx-auto\"></div>\n              </div>\n              <p className=\"text-sm text-purple-100 mt-2\">Loading ad service...</p>\n            </div>\n          )}\n          \n          {error && (\n            <div className=\"mt-3 p-3 bg-red-500/20 border border-red-400/30 rounded-lg\">\n              <p className=\"text-red-100 text-sm\">{error}</p>\n            </div>\n          )}\n          \n          {rewardEarned && (\n            <div className=\"mt-3 p-3 bg-green-500/20 border border-green-400/30 rounded-lg\">\n              <p className=\"text-green-100 text-sm font-medium\">\n                🎉 Congratulations! You earned {rewardEarned} coins!\n              </p>\n            </div>\n          )}\n        </div>\n        \n        <div className=\"text-xs text-purple-200 space-y-1\">\n          <p>• Ads are provided by our trusted partner network</p>\n          <p>• Rewards are granted after successful ad completion</p>\n          <p>• Daily limits may apply to prevent abuse</p>\n          <p>• Only genuine ad views are rewarded</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 523, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/TaskList.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\nimport TelegramService from '@/lib/telegram'\n\ninterface Task {\n  id: string\n  title: string\n  description: string\n  reward: number\n  type: 'social' | 'ad_view' | 'referral' | 'daily_bonus'\n  status: 'available' | 'completed' | 'expired'\n  dailyLimit: number\n  completedCount: number\n  emoji: string\n}\n\nexport default function TaskList() {\n  const [tasks, setTasks] = useState<Task[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [completingTask, setCompletingTask] = useState<string | null>(null)\n\n  useEffect(() => {\n    loadTasks()\n  }, [])\n\n  const loadTasks = async () => {\n    try {\n      setLoading(true)\n      setError(null)\n      \n      const user = TelegramService.getInstance().getUser()\n      \n      if (!user) {\n        setError('User not authenticated')\n        return\n      }\n\n      // For now, we'll use mock data. In production, this would fetch from /api/tasks\n      const mockTasks: Task[] = [\n        {\n          id: '1',\n          title: 'Daily Check-in',\n          description: 'Check in daily to earn bonus coins',\n          reward: 50,\n          type: 'daily_bonus',\n          status: 'available',\n          dailyLimit: 1,\n          completedCount: 0,\n          emoji: '📅'\n        },\n        {\n          id: '2',\n          title: 'Follow on Telegram',\n          description: 'Follow our official Telegram channel',\n          reward: 100,\n          type: 'social',\n          status: 'available',\n          dailyLimit: 1,\n          completedCount: 0,\n          emoji: '📢'\n        },\n        {\n          id: '3',\n          title: 'Share with Friends',\n          description: 'Share TapWave with 3 friends',\n          reward: 200,\n          type: 'referral',\n          status: 'available',\n          dailyLimit: 3,\n          completedCount: 0,\n          emoji: '👥'\n        },\n        {\n          id: '4',\n          title: 'Watch 5 Ads',\n          description: 'Watch 5 advertisements today',\n          reward: 25,\n          type: 'ad_view',\n          status: 'available',\n          dailyLimit: 5,\n          completedCount: 0,\n          emoji: '📺'\n        }\n      ]\n\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 1000))\n      \n      setTasks(mockTasks)\n    } catch (err) {\n      console.error('Failed to load tasks:', err)\n      setError(err instanceof Error ? err.message : 'Failed to load tasks')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const completeTask = async (taskId: string) => {\n    try {\n      setCompletingTask(taskId)\n      setError(null)\n      \n      const user = TelegramService.getInstance().getUser()\n      \n      if (!user) {\n        setError('User not authenticated')\n        return\n      }\n\n      const task = tasks.find(t => t.id === taskId)\n      if (!task) {\n        setError('Task not found')\n        return\n      }\n\n      // Handle different task types\n      if (task.type === 'social') {\n        // Open Telegram channel\n        const telegramService = TelegramService.getInstance()\n        telegramService.openTelegramLink('https://t.me/tapwave_official')\n      } else if (task.type === 'referral') {\n        // This would typically open the referral sharing interface\n        const telegramService = TelegramService.getInstance()\n        telegramService.triggerHapticFeedback('medium')\n      }\n\n      // Simulate API call to complete task\n      await new Promise(resolve => setTimeout(resolve, 1500))\n\n      // Update task status locally\n      setTasks(prevTasks => \n        prevTasks.map(t => \n          t.id === taskId \n            ? { \n                ...t, \n                status: t.completedCount + 1 >= t.dailyLimit ? 'completed' : 'available',\n                completedCount: t.completedCount + 1 \n              }\n            : t\n        )\n      )\n\n      // Trigger success feedback\n      const telegramService = TelegramService.getInstance()\n      telegramService.triggerNotificationFeedback('success')\n      telegramService.showAlert(`Task completed! You earned ${task.reward} coins.`)\n\n    } catch (err) {\n      console.error('Failed to complete task:', err)\n      setError(err instanceof Error ? err.message : 'Failed to complete task')\n      \n      // Trigger error feedback\n      const telegramService = TelegramService.getInstance()\n      telegramService.triggerNotificationFeedback('error')\n    } finally {\n      setCompletingTask(null)\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"space-y-4\">\n        {[1, 2, 3].map((i) => (\n          <div key={i} className=\"bg-white rounded-2xl p-6 animate-pulse\">\n            <div className=\"flex justify-between items-start mb-3\">\n              <div className=\"h-6 bg-gray-200 rounded w-3/4\"></div>\n              <div className=\"h-6 bg-gray-200 rounded w-16\"></div>\n            </div>\n            <div className=\"h-4 bg-gray-200 rounded w-full mb-4\"></div>\n            <div className=\"flex justify-between items-center\">\n              <div className=\"h-4 bg-gray-200 rounded w-24\"></div>\n              <div className=\"h-10 bg-gray-200 rounded w-20\"></div>\n            </div>\n          </div>\n        ))}\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-50 border border-red-200 rounded-2xl p-6\">\n        <div className=\"text-center\">\n          <div className=\"text-4xl mb-2\">❌</div>\n          <h3 className=\"text-lg font-semibold text-red-800 mb-2\">Error Loading Tasks</h3>\n          <p className=\"text-red-600 mb-4\">{error}</p>\n          <button\n            onClick={loadTasks}\n            className=\"bg-red-600 text-white px-6 py-2 rounded-lg font-medium hover:bg-red-700 transition-colors\"\n          >\n            Try Again\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  const availableTasks = tasks.filter(task => task.status === 'available' && task.completedCount < task.dailyLimit)\n  const completedTasks = tasks.filter(task => task.status === 'completed' || task.completedCount >= task.dailyLimit)\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Available Tasks */}\n      <div>\n        <h2 className=\"text-xl font-semibold mb-4 text-gray-800\">\n          Available Tasks ({availableTasks.length})\n        </h2>\n        \n        {availableTasks.length === 0 ? (\n          <div className=\"bg-gray-50 rounded-2xl p-8 text-center\">\n            <div className=\"text-4xl mb-3\">🎯</div>\n            <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">No Tasks Available</h3>\n            <p className=\"text-gray-600\">Check back later for new tasks and opportunities to earn!</p>\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            {availableTasks.map(task => (\n              <div key={task.id} className=\"bg-white rounded-2xl shadow-sm p-6 border border-gray-100\">\n                <div className=\"flex justify-between items-start mb-3\">\n                  <div className=\"flex items-center\">\n                    <span className=\"text-2xl mr-3\">{task.emoji}</span>\n                    <div>\n                      <h3 className=\"font-semibold text-gray-900\">{task.title}</h3>\n                      <span className=\"inline-block px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full mt-1\">\n                        {task.type.replace('_', ' ').toUpperCase()}\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"text-right\">\n                    <span className=\"text-lg font-bold text-green-600\">+{task.reward}</span>\n                    <div className=\"text-xs text-gray-500\">coins</div>\n                  </div>\n                </div>\n                \n                <p className=\"text-gray-600 mb-4\">{task.description}</p>\n                \n                <div className=\"flex justify-between items-center\">\n                  <div className=\"text-sm text-gray-500\">\n                    Progress: {task.completedCount}/{task.dailyLimit} today\n                  </div>\n                  \n                  <button\n                    onClick={() => completeTask(task.id)}\n                    disabled={completingTask === task.id || task.completedCount >= task.dailyLimit}\n                    className=\"bg-blue-600 text-white px-6 py-2 rounded-xl font-medium hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 transform hover:scale-105 active:scale-95\"\n                  >\n                    {completingTask === task.id ? (\n                      <div className=\"flex items-center\">\n                        <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                        Completing...\n                      </div>\n                    ) : task.completedCount >= task.dailyLimit ? (\n                      'Limit Reached'\n                    ) : (\n                      'Complete Task'\n                    )}\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Completed Tasks */}\n      {completedTasks.length > 0 && (\n        <div>\n          <h2 className=\"text-xl font-semibold mb-4 text-gray-800\">\n            Completed Tasks ({completedTasks.length})\n          </h2>\n          <div className=\"space-y-3\">\n            {completedTasks.map(task => (\n              <div key={task.id} className=\"bg-green-50 border border-green-200 rounded-xl p-4\">\n                <div className=\"flex justify-between items-center\">\n                  <div className=\"flex items-center\">\n                    <span className=\"text-xl mr-3\">{task.emoji}</span>\n                    <div>\n                      <span className=\"font-medium text-green-800\">{task.title}</span>\n                      <div className=\"text-sm text-green-600\">\n                        Completed {task.completedCount}/{task.dailyLimit}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center text-green-600\">\n                    <span className=\"text-sm font-medium\">+{task.reward * task.completedCount} coins</span>\n                    <span className=\"ml-2\">✅</span>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1129, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/Wallet.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\nimport TelegramService from '@/lib/telegram'\n\ninterface Transaction {\n  id: string\n  type: 'earn' | 'spend' | 'withdraw'\n  amount: number\n  source: string\n  description: string\n  created_at: string\n  status?: 'completed' | 'pending' | 'failed'\n}\n\ninterface WalletData {\n  balance: number\n  totalEarned: number\n  totalWithdrawn: number\n  transactions: Transaction[]\n}\n\nexport default function Wallet() {\n  const [walletData, setWalletData] = useState<WalletData | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [refreshing, setRefreshing] = useState(false)\n\n  useEffect(() => {\n    loadWalletData()\n  }, [])\n\n  const loadWalletData = async (isRefresh = false) => {\n    try {\n      if (isRefresh) {\n        setRefreshing(true)\n      } else {\n        setLoading(true)\n      }\n      setError(null)\n      \n      const user = TelegramService.getInstance().getUser()\n      \n      if (!user) {\n        setError('User not authenticated')\n        return\n      }\n\n      // For now, we'll use mock data. In production, this would fetch from /api/wallet\n      const mockTransactions: Transaction[] = [\n        {\n          id: '1',\n          type: 'earn',\n          amount: 50,\n          source: 'daily_bonus',\n          description: 'Daily check-in bonus',\n          created_at: new Date().toISOString(),\n          status: 'completed'\n        },\n        {\n          id: '2',\n          type: 'earn',\n          amount: 10,\n          source: 'ad_view',\n          description: 'Watched advertisement',\n          created_at: new Date(Date.now() - 3600000).toISOString(),\n          status: 'completed'\n        },\n        {\n          id: '3',\n          type: 'earn',\n          amount: 100,\n          source: 'referral',\n          description: 'Friend joined via your referral',\n          created_at: new Date(Date.now() - 7200000).toISOString(),\n          status: 'completed'\n        },\n        {\n          id: '4',\n          type: 'earn',\n          amount: 200,\n          source: 'task_completion',\n          description: 'Completed social media task',\n          created_at: new Date(Date.now() - 86400000).toISOString(),\n          status: 'completed'\n        },\n        {\n          id: '5',\n          type: 'withdraw',\n          amount: 100,\n          source: 'telegram_stars',\n          description: 'Withdrawal to Telegram Stars',\n          created_at: new Date(Date.now() - 172800000).toISOString(),\n          status: 'pending'\n        }\n      ]\n\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, isRefresh ? 500 : 1000))\n\n      const totalEarned = mockTransactions\n        .filter(t => t.type === 'earn')\n        .reduce((sum, t) => sum + t.amount, 0)\n\n      const totalWithdrawn = mockTransactions\n        .filter(t => t.type === 'withdraw' && t.status === 'completed')\n        .reduce((sum, t) => sum + t.amount, 0)\n\n      const balance = totalEarned - totalWithdrawn\n\n      setWalletData({\n        balance,\n        totalEarned,\n        totalWithdrawn,\n        transactions: mockTransactions.sort((a, b) => \n          new Date(b.created_at).getTime() - new Date(a.created_at).getTime()\n        )\n      })\n\n    } catch (err) {\n      console.error('Failed to load wallet data:', err)\n      setError(err instanceof Error ? err.message : 'Failed to load wallet data')\n    } finally {\n      setLoading(false)\n      setRefreshing(false)\n    }\n  }\n\n  const handleRefresh = () => {\n    const telegramService = TelegramService.getInstance()\n    telegramService.triggerHapticFeedback('light')\n    loadWalletData(true)\n  }\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString)\n    const now = new Date()\n    const diffInHours = (now.getTime() - date.getTime()) / (1000 * 60 * 60)\n\n    if (diffInHours < 1) {\n      return 'Just now'\n    } else if (diffInHours < 24) {\n      return `${Math.floor(diffInHours)}h ago`\n    } else if (diffInHours < 48) {\n      return 'Yesterday'\n    } else {\n      return date.toLocaleDateString()\n    }\n  }\n\n  const getTransactionIcon = (transaction: Transaction) => {\n    if (transaction.type === 'earn') {\n      switch (transaction.source) {\n        case 'ad_view': return '📺'\n        case 'referral': return '👥'\n        case 'daily_bonus': return '📅'\n        case 'task_completion': return '✅'\n        default: return '💰'\n      }\n    } else if (transaction.type === 'withdraw') {\n      return '💸'\n    }\n    return '💰'\n  }\n\n  const getStatusColor = (status?: string) => {\n    switch (status) {\n      case 'completed': return 'text-green-600'\n      case 'pending': return 'text-yellow-600'\n      case 'failed': return 'text-red-600'\n      default: return 'text-gray-600'\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"space-y-6\">\n        {/* Balance Card Skeleton */}\n        <div className=\"bg-white rounded-2xl shadow-sm p-6 animate-pulse\">\n          <div className=\"h-6 bg-gray-200 rounded w-32 mb-4\"></div>\n          <div className=\"h-12 bg-gray-200 rounded w-48 mb-2\"></div>\n          <div className=\"h-4 bg-gray-200 rounded w-24\"></div>\n        </div>\n\n        {/* Stats Skeleton */}\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div className=\"bg-white rounded-2xl shadow-sm p-4 animate-pulse\">\n            <div className=\"h-8 bg-gray-200 rounded w-16 mb-2\"></div>\n            <div className=\"h-4 bg-gray-200 rounded w-20\"></div>\n          </div>\n          <div className=\"bg-white rounded-2xl shadow-sm p-4 animate-pulse\">\n            <div className=\"h-8 bg-gray-200 rounded w-16 mb-2\"></div>\n            <div className=\"h-4 bg-gray-200 rounded w-20\"></div>\n          </div>\n        </div>\n\n        {/* Transactions Skeleton */}\n        <div className=\"bg-white rounded-2xl shadow-sm p-6 animate-pulse\">\n          <div className=\"h-6 bg-gray-200 rounded w-40 mb-4\"></div>\n          {[1, 2, 3].map((i) => (\n            <div key={i} className=\"flex justify-between items-center py-3 border-b border-gray-100 last:border-b-0\">\n              <div className=\"flex items-center\">\n                <div className=\"w-10 h-10 bg-gray-200 rounded-full mr-3\"></div>\n                <div>\n                  <div className=\"h-4 bg-gray-200 rounded w-32 mb-1\"></div>\n                  <div className=\"h-3 bg-gray-200 rounded w-20\"></div>\n                </div>\n              </div>\n              <div className=\"h-4 bg-gray-200 rounded w-16\"></div>\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-50 border border-red-200 rounded-2xl p-6\">\n        <div className=\"text-center\">\n          <div className=\"text-4xl mb-2\">💳</div>\n          <h3 className=\"text-lg font-semibold text-red-800 mb-2\">Error Loading Wallet</h3>\n          <p className=\"text-red-600 mb-4\">{error}</p>\n          <button\n            onClick={() => loadWalletData()}\n            className=\"bg-red-600 text-white px-6 py-2 rounded-lg font-medium hover:bg-red-700 transition-colors\"\n          >\n            Try Again\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  if (!walletData) {\n    return (\n      <div className=\"bg-gray-50 rounded-2xl p-8 text-center\">\n        <div className=\"text-4xl mb-3\">💰</div>\n        <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">No Wallet Data</h3>\n        <p className=\"text-gray-600\">Unable to load wallet information</p>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Balance Card */}\n      <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 rounded-2xl shadow-lg p-6 text-white\">\n        <div className=\"flex justify-between items-start mb-4\">\n          <div>\n            <h2 className=\"text-lg font-medium opacity-90\">Your Balance</h2>\n            <div className=\"text-4xl font-bold mb-1\">\n              {walletData.balance.toLocaleString()}\n            </div>\n            <p className=\"text-blue-100\">coins</p>\n          </div>\n          <button\n            onClick={handleRefresh}\n            disabled={refreshing}\n            className=\"p-2 bg-white/20 rounded-full hover:bg-white/30 transition-colors\"\n          >\n            <div className={`w-5 h-5 ${refreshing ? 'animate-spin' : ''}`}>\n              🔄\n            </div>\n          </button>\n        </div>\n        \n        <div className=\"flex justify-between text-sm opacity-90\">\n          <span>Available for withdrawal</span>\n          <span>💎 Premium Balance</span>\n        </div>\n      </div>\n\n      {/* Stats Grid */}\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div className=\"bg-white rounded-2xl shadow-sm p-4\">\n          <div className=\"text-2xl font-bold text-green-600 mb-1\">\n            {walletData.totalEarned.toLocaleString()}\n          </div>\n          <p className=\"text-sm text-gray-600\">Total Earned</p>\n        </div>\n        \n        <div className=\"bg-white rounded-2xl shadow-sm p-4\">\n          <div className=\"text-2xl font-bold text-blue-600 mb-1\">\n            {walletData.totalWithdrawn.toLocaleString()}\n          </div>\n          <p className=\"text-sm text-gray-600\">Total Withdrawn</p>\n        </div>\n      </div>\n\n      {/* Recent Transactions */}\n      <div className=\"bg-white rounded-2xl shadow-sm p-6\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h2 className=\"text-lg font-semibold text-gray-800\">Recent Transactions</h2>\n          <span className=\"text-sm text-gray-500\">\n            {walletData.transactions.length} transactions\n          </span>\n        </div>\n        \n        {walletData.transactions.length === 0 ? (\n          <div className=\"text-center py-8\">\n            <div className=\"text-4xl mb-3\">📊</div>\n            <p className=\"text-gray-600\">No transactions yet</p>\n            <p className=\"text-sm text-gray-500 mt-1\">Start earning by completing tasks!</p>\n          </div>\n        ) : (\n          <div className=\"space-y-3\">\n            {walletData.transactions.slice(0, 10).map(transaction => (\n              <div key={transaction.id} className=\"flex justify-between items-center p-3 bg-gray-50 rounded-xl\">\n                <div className=\"flex items-center\">\n                  <div className=\"w-10 h-10 bg-white rounded-full flex items-center justify-center mr-3 shadow-sm\">\n                    <span className=\"text-lg\">{getTransactionIcon(transaction)}</span>\n                  </div>\n                  <div>\n                    <p className=\"font-medium text-gray-900\">{transaction.description}</p>\n                    <div className=\"flex items-center text-xs text-gray-500\">\n                      <span>{formatDate(transaction.created_at)}</span>\n                      {transaction.status && (\n                        <>\n                          <span className=\"mx-1\">•</span>\n                          <span className={getStatusColor(transaction.status)}>\n                            {transaction.status}\n                          </span>\n                        </>\n                      )}\n                    </div>\n                  </div>\n                </div>\n                <div className={`font-semibold ${\n                  transaction.type === 'earn' ? 'text-green-600' : \n                  transaction.type === 'withdraw' ? 'text-red-600' : 'text-gray-600'\n                }`}>\n                  {transaction.type === 'earn' ? '+' : '-'}\n                  {transaction.amount.toLocaleString()}\n                </div>\n              </div>\n            ))}\n            \n            {walletData.transactions.length > 10 && (\n              <div className=\"text-center pt-4\">\n                <button className=\"text-blue-600 text-sm font-medium hover:text-blue-700\">\n                  View All Transactions\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1898, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/Referrals.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\nimport TelegramService from '@/lib/telegram'\n\ninterface ReferralData {\n  referralCode: string\n  referralLink: string\n  totalReferrals: number\n  totalEarnings: number\n  referrals: Array<{\n    id: string\n    username: string\n    first_name: string\n    joined_at: string\n    earnings: number\n    status: 'active' | 'inactive'\n  }>\n}\n\nexport default function Referrals() {\n  const [referralData, setReferralData] = useState<ReferralData | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [copied, setCopied] = useState(false)\n  const [sharing, setSharing] = useState(false)\n\n  useEffect(() => {\n    loadReferralData()\n  }, [])\n\n  const loadReferralData = async () => {\n    try {\n      setLoading(true)\n      setError(null)\n      \n      const user = TelegramService.getInstance().getUser()\n      \n      if (!user) {\n        setError('User not authenticated')\n        return\n      }\n\n      // For now, we'll use mock data. In production, this would fetch from /api/referrals\n      const mockReferrals = [\n        {\n          id: '1',\n          username: 'alice_crypto',\n          first_name: 'Alice',\n          joined_at: new Date(Date.now() - 86400000).toISOString(),\n          earnings: 100,\n          status: 'active' as const\n        },\n        {\n          id: '2',\n          username: 'bob_trader',\n          first_name: 'Bob',\n          joined_at: new Date(Date.now() - 172800000).toISOString(),\n          earnings: 250,\n          status: 'active' as const\n        },\n        {\n          id: '3',\n          username: 'charlie_dev',\n          first_name: 'Charlie',\n          joined_at: new Date(Date.now() - 259200000).toISOString(),\n          earnings: 75,\n          status: 'inactive' as const\n        }\n      ]\n\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 1000))\n\n      const totalEarnings = mockReferrals.reduce((sum, ref) => sum + (ref.earnings * 0.1), 0) // 10% commission\n\n      const mockData: ReferralData = {\n        referralCode: `REF${user.id}`,\n        referralLink: `https://t.me/tapwave_bot?start=ref${user.id}`,\n        totalReferrals: mockReferrals.length,\n        totalEarnings,\n        referrals: mockReferrals\n      }\n\n      setReferralData(mockData)\n\n    } catch (err) {\n      console.error('Failed to load referral data:', err)\n      setError(err instanceof Error ? err.message : 'Failed to load referral data')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const copyReferralLink = async () => {\n    if (!referralData?.referralLink) return\n\n    try {\n      await navigator.clipboard.writeText(referralData.referralLink)\n      setCopied(true)\n      \n      // Trigger success haptic feedback\n      const telegramService = TelegramService.getInstance()\n      telegramService.triggerHapticFeedback('light')\n      \n      setTimeout(() => setCopied(false), 2000)\n    } catch (err) {\n      console.error('Failed to copy link:', err)\n      \n      // Fallback for older browsers\n      const textArea = document.createElement('textarea')\n      textArea.value = referralData.referralLink\n      document.body.appendChild(textArea)\n      textArea.select()\n      document.execCommand('copy')\n      document.body.removeChild(textArea)\n      \n      setCopied(true)\n      setTimeout(() => setCopied(false), 2000)\n    }\n  }\n\n  const shareOnTelegram = async () => {\n    if (!referralData?.referralLink) return\n\n    try {\n      setSharing(true)\n      \n      const message = `🌊 Join me on TapWave and start earning coins!\\n\\n💰 Watch ads, complete tasks, and get rewarded\\n🎁 Use my referral link to get started: ${referralData.referralLink}\\n\\n#TapWave #EarnCoins #Crypto`\n      \n      const telegramService = TelegramService.getInstance()\n      \n      // Try to use Telegram's native sharing if available\n      if (telegramService.getWebApp()?.switchInlineQuery) {\n        telegramService.getWebApp()?.switchInlineQuery(message, ['users', 'groups'])\n      } else {\n        // Fallback to opening Telegram share URL\n        const shareUrl = `https://t.me/share/url?url=${encodeURIComponent(referralData.referralLink)}&text=${encodeURIComponent(message)}`\n        telegramService.openLink(shareUrl)\n      }\n      \n      // Trigger haptic feedback\n      telegramService.triggerHapticFeedback('medium')\n      \n    } catch (err) {\n      console.error('Failed to share:', err)\n    } finally {\n      setSharing(false)\n    }\n  }\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString)\n    return date.toLocaleDateString('en-US', { \n      month: 'short', \n      day: 'numeric',\n      year: 'numeric'\n    })\n  }\n\n  if (loading) {\n    return (\n      <div className=\"space-y-6\">\n        {/* Referral Link Skeleton */}\n        <div className=\"bg-white rounded-2xl shadow-sm p-6 animate-pulse\">\n          <div className=\"h-6 bg-gray-200 rounded w-40 mb-4\"></div>\n          <div className=\"h-12 bg-gray-200 rounded mb-4\"></div>\n          <div className=\"flex gap-2\">\n            <div className=\"h-10 bg-gray-200 rounded flex-1\"></div>\n            <div className=\"h-10 bg-gray-200 rounded flex-1\"></div>\n          </div>\n        </div>\n\n        {/* Stats Skeleton */}\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div className=\"bg-white rounded-2xl shadow-sm p-4 animate-pulse\">\n            <div className=\"h-8 bg-gray-200 rounded w-16 mb-2\"></div>\n            <div className=\"h-4 bg-gray-200 rounded w-20\"></div>\n          </div>\n          <div className=\"bg-white rounded-2xl shadow-sm p-4 animate-pulse\">\n            <div className=\"h-8 bg-gray-200 rounded w-16 mb-2\"></div>\n            <div className=\"h-4 bg-gray-200 rounded w-20\"></div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-50 border border-red-200 rounded-2xl p-6\">\n        <div className=\"text-center\">\n          <div className=\"text-4xl mb-2\">👥</div>\n          <h3 className=\"text-lg font-semibold text-red-800 mb-2\">Error Loading Referrals</h3>\n          <p className=\"text-red-600 mb-4\">{error}</p>\n          <button\n            onClick={loadReferralData}\n            className=\"bg-red-600 text-white px-6 py-2 rounded-lg font-medium hover:bg-red-700 transition-colors\"\n          >\n            Try Again\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  if (!referralData) {\n    return (\n      <div className=\"bg-gray-50 rounded-2xl p-8 text-center\">\n        <div className=\"text-4xl mb-3\">👥</div>\n        <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">No Referral Data</h3>\n        <p className=\"text-gray-600\">Unable to load referral information</p>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Referral Link Card */}\n      <div className=\"bg-gradient-to-r from-green-500 to-emerald-600 rounded-2xl shadow-lg p-6 text-white\">\n        <h2 className=\"text-xl font-semibold mb-2\">Invite Friends & Earn! 🎉</h2>\n        <p className=\"text-green-100 mb-4\">\n          Earn 10% of your friends' earnings when they join using your link\n        </p>\n        \n        <div className=\"bg-white/20 backdrop-blur-sm rounded-xl p-4 mb-4\">\n          <div className=\"text-sm text-green-100 mb-2\">Your Referral Link:</div>\n          <div className=\"bg-white/10 rounded-lg p-3 font-mono text-sm break-all\">\n            {referralData.referralLink}\n          </div>\n        </div>\n        \n        <div className=\"flex gap-3\">\n          <button\n            onClick={copyReferralLink}\n            className=\"flex-1 bg-white text-green-600 px-4 py-3 rounded-xl font-semibold hover:bg-green-50 transition-all duration-200 transform hover:scale-105 active:scale-95\"\n          >\n            {copied ? '✅ Copied!' : '📋 Copy Link'}\n          </button>\n          \n          <button\n            onClick={shareOnTelegram}\n            disabled={sharing}\n            className=\"flex-1 bg-green-400 text-white px-4 py-3 rounded-xl font-semibold hover:bg-green-300 disabled:opacity-50 transition-all duration-200 transform hover:scale-105 active:scale-95\"\n          >\n            {sharing ? '📤 Sharing...' : '📤 Share'}\n          </button>\n        </div>\n      </div>\n\n      {/* Referral Stats */}\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div className=\"bg-white rounded-2xl shadow-sm p-6\">\n          <div className=\"text-center\">\n            <div className=\"text-3xl font-bold text-blue-600 mb-1\">\n              {referralData.totalReferrals}\n            </div>\n            <p className=\"text-sm text-gray-600\">Total Referrals</p>\n          </div>\n        </div>\n        \n        <div className=\"bg-white rounded-2xl shadow-sm p-6\">\n          <div className=\"text-center\">\n            <div className=\"text-3xl font-bold text-green-600 mb-1\">\n              {Math.round(referralData.totalEarnings)}\n            </div>\n            <p className=\"text-sm text-gray-600\">Earnings from Referrals</p>\n          </div>\n        </div>\n      </div>\n\n      {/* How It Works */}\n      <div className=\"bg-white rounded-2xl shadow-sm p-6\">\n        <h3 className=\"text-lg font-semibold mb-4 text-gray-800\">How Referrals Work</h3>\n        <div className=\"space-y-3\">\n          <div className=\"flex items-start\">\n            <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center mr-3 mt-0.5\">\n              <span className=\"text-blue-600 font-bold text-sm\">1</span>\n            </div>\n            <div>\n              <p className=\"font-medium text-gray-800\">Share your link</p>\n              <p className=\"text-sm text-gray-600\">Send your referral link to friends via Telegram, social media, or any platform</p>\n            </div>\n          </div>\n          \n          <div className=\"flex items-start\">\n            <div className=\"w-8 h-8 bg-green-100 rounded-full flex items-center justify-center mr-3 mt-0.5\">\n              <span className=\"text-green-600 font-bold text-sm\">2</span>\n            </div>\n            <div>\n              <p className=\"font-medium text-gray-800\">Friends join & earn</p>\n              <p className=\"text-sm text-gray-600\">When they sign up and start earning, you get 10% commission</p>\n            </div>\n          </div>\n          \n          <div className=\"flex items-start\">\n            <div className=\"w-8 h-8 bg-purple-100 rounded-full flex items-center justify-center mr-3 mt-0.5\">\n              <span className=\"text-purple-600 font-bold text-sm\">3</span>\n            </div>\n            <div>\n              <p className=\"font-medium text-gray-800\">Earn passively</p>\n              <p className=\"text-sm text-gray-600\">Continue earning as long as your referrals stay active</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Referral List */}\n      {referralData.referrals.length > 0 && (\n        <div className=\"bg-white rounded-2xl shadow-sm p-6\">\n          <h3 className=\"text-lg font-semibold mb-4 text-gray-800\">\n            Your Referrals ({referralData.referrals.length})\n          </h3>\n          \n          <div className=\"space-y-3\">\n            {referralData.referrals.map(referral => (\n              <div key={referral.id} className=\"flex justify-between items-center p-4 bg-gray-50 rounded-xl\">\n                <div className=\"flex items-center\">\n                  <div className=\"w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center mr-3\">\n                    <span className=\"text-white font-bold text-sm\">\n                      {referral.first_name.charAt(0).toUpperCase()}\n                    </span>\n                  </div>\n                  <div>\n                    <p className=\"font-medium text-gray-900\">\n                      {referral.first_name}\n                      {referral.username && (\n                        <span className=\"text-gray-500 text-sm ml-1\">@{referral.username}</span>\n                      )}\n                    </p>\n                    <div className=\"flex items-center text-xs text-gray-500\">\n                      <span>Joined {formatDate(referral.joined_at)}</span>\n                      <span className=\"mx-2\">•</span>\n                      <span className={referral.status === 'active' ? 'text-green-600' : 'text-gray-400'}>\n                        {referral.status}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"font-semibold text-green-600\">\n                    +{Math.round(referral.earnings * 0.1)}\n                  </p>\n                  <p className=\"text-xs text-gray-500\">coins earned</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Empty State for No Referrals */}\n      {referralData.referrals.length === 0 && (\n        <div className=\"bg-gray-50 rounded-2xl p-8 text-center\">\n          <div className=\"text-4xl mb-3\">🎯</div>\n          <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">No Referrals Yet</h3>\n          <p className=\"text-gray-600 mb-4\">\n            Start sharing your referral link to earn passive income from your friends' activities!\n          </p>\n          <button\n            onClick={shareOnTelegram}\n            className=\"bg-blue-600 text-white px-6 py-2 rounded-lg font-medium hover:bg-blue-700 transition-colors\"\n          >\n            Share Now\n          </button>\n        </div>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2768, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/Withdraw.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\nimport TelegramService from '@/lib/telegram'\n\ninterface WithdrawalMethod {\n  id: string\n  name: string\n  description: string\n  minAmount: number\n  maxAmount: number\n  processingTime: string\n  fee: number\n  icon: string\n  available: boolean\n}\n\ninterface WithdrawalRequest {\n  id: string\n  amount: number\n  method: string\n  address: string\n  status: 'pending' | 'processing' | 'completed' | 'failed'\n  created_at: string\n  completed_at?: string\n  fee: number\n}\n\nexport default function Withdraw() {\n  const [balance, setBalance] = useState<number>(0)\n  const [amount, setAmount] = useState<string>('')\n  const [selectedMethod, setSelectedMethod] = useState<string>('')\n  const [address, setAddress] = useState<string>('')\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [success, setSuccess] = useState<string | null>(null)\n  const [withdrawalHistory, setWithdrawalHistory] = useState<WithdrawalRequest[]>([])\n\n  const withdrawalMethods: WithdrawalMethod[] = [\n    {\n      id: 'telegram_stars',\n      name: 'Telegram Stars',\n      description: 'Instant withdrawal to Telegram Stars',\n      minAmount: 100,\n      maxAmount: 10000,\n      processingTime: 'Instant',\n      fee: 0,\n      icon: '⭐',\n      available: true\n    },\n    {\n      id: 'ton_wallet',\n      name: 'TON Wallet',\n      description: 'Withdraw to your TON cryptocurrency wallet',\n      minAmount: 500,\n      maxAmount: 50000,\n      processingTime: '1-24 hours',\n      fee: 10,\n      icon: '💎',\n      available: true\n    },\n    {\n      id: 'usdt_trc20',\n      name: 'USDT (TRC20)',\n      description: 'Withdraw as USDT on TRON network',\n      minAmount: 1000,\n      maxAmount: 100000,\n      processingTime: '1-24 hours',\n      fee: 25,\n      icon: '💰',\n      available: false // Disabled for demo\n    }\n  ]\n\n  useEffect(() => {\n    loadWithdrawData()\n  }, [])\n\n  const loadWithdrawData = async () => {\n    try {\n      const user = TelegramService.getInstance().getUser()\n      \n      if (!user) {\n        setError('User not authenticated')\n        return\n      }\n\n      // Mock data - in production, this would fetch from API\n      setBalance(1250) // Mock balance\n\n      const mockHistory: WithdrawalRequest[] = [\n        {\n          id: '1',\n          amount: 500,\n          method: 'telegram_stars',\n          address: 'Telegram Stars',\n          status: 'completed',\n          created_at: new Date(Date.now() - 86400000).toISOString(),\n          completed_at: new Date(Date.now() - 86000000).toISOString(),\n          fee: 0\n        },\n        {\n          id: '2',\n          amount: 1000,\n          method: 'ton_wallet',\n          address: 'UQD...xyz123',\n          status: 'pending',\n          created_at: new Date(Date.now() - 3600000).toISOString(),\n          fee: 10\n        }\n      ]\n\n      setWithdrawalHistory(mockHistory)\n\n    } catch (err) {\n      console.error('Failed to load withdrawal data:', err)\n    }\n  }\n\n  const handleWithdraw = async (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    try {\n      setLoading(true)\n      setError(null)\n      setSuccess(null)\n\n      const numericAmount = parseInt(amount)\n      \n      if (!numericAmount || numericAmount <= 0) {\n        setError('Please enter a valid amount')\n        return\n      }\n\n      if (!selectedMethod) {\n        setError('Please select a withdrawal method')\n        return\n      }\n\n      const method = withdrawalMethods.find(m => m.id === selectedMethod)\n      if (!method) {\n        setError('Invalid withdrawal method')\n        return\n      }\n\n      if (!method.available) {\n        setError('This withdrawal method is currently unavailable')\n        return\n      }\n\n      if (numericAmount < method.minAmount) {\n        setError(`Minimum withdrawal amount is ${method.minAmount} coins`)\n        return\n      }\n\n      if (numericAmount > method.maxAmount) {\n        setError(`Maximum withdrawal amount is ${method.maxAmount} coins`)\n        return\n      }\n\n      const totalAmount = numericAmount + method.fee\n      if (totalAmount > balance) {\n        setError(`Insufficient balance. You need ${totalAmount} coins (including ${method.fee} fee)`)\n        return\n      }\n\n      if (!address.trim()) {\n        setError('Please enter a withdrawal address')\n        return\n      }\n\n      const user = TelegramService.getInstance().getUser()\n      \n      if (!user) {\n        setError('User not authenticated')\n        return\n      }\n\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 2000))\n\n      // Create mock withdrawal request\n      const newWithdrawal: WithdrawalRequest = {\n        id: Date.now().toString(),\n        amount: numericAmount,\n        method: selectedMethod,\n        address: address.trim(),\n        status: 'pending',\n        created_at: new Date().toISOString(),\n        fee: method.fee\n      }\n\n      setWithdrawalHistory(prev => [newWithdrawal, ...prev])\n      setBalance(prev => prev - totalAmount)\n\n      setSuccess(`Withdrawal request submitted successfully! You will receive ${numericAmount} coins after processing.`)\n      \n      // Reset form\n      setAmount('')\n      setAddress('')\n      setSelectedMethod('')\n\n      // Trigger success haptic feedback\n      const telegramService = TelegramService.getInstance()\n      telegramService.triggerNotificationFeedback('success')\n\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to submit withdrawal request')\n      \n      // Trigger error haptic feedback\n      const telegramService = TelegramService.getInstance()\n      telegramService.triggerNotificationFeedback('error')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'completed': return 'text-green-600 bg-green-100'\n      case 'processing': return 'text-blue-600 bg-blue-100'\n      case 'pending': return 'text-yellow-600 bg-yellow-100'\n      case 'failed': return 'text-red-600 bg-red-100'\n      default: return 'text-gray-600 bg-gray-100'\n    }\n  }\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString)\n    return date.toLocaleDateString('en-US', { \n      month: 'short', \n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    })\n  }\n\n  const selectedMethodData = withdrawalMethods.find(m => m.id === selectedMethod)\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Balance Card */}\n      <div className=\"bg-gradient-to-r from-green-500 to-emerald-600 rounded-2xl shadow-lg p-6 text-white\">\n        <h2 className=\"text-lg font-medium opacity-90 mb-2\">Available Balance</h2>\n        <div className=\"text-4xl font-bold mb-1\">\n          {balance.toLocaleString()}\n        </div>\n        <p className=\"text-green-100\">coins ready for withdrawal</p>\n      </div>\n\n      {/* Withdrawal Form */}\n      <div className=\"bg-white rounded-2xl shadow-sm p-6\">\n        <h2 className=\"text-xl font-semibold mb-6 text-gray-800\">Withdraw Coins</h2>\n        \n        <form onSubmit={handleWithdraw} className=\"space-y-6\">\n          {/* Withdrawal Method Selection */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n              Select Withdrawal Method\n            </label>\n            <div className=\"space-y-3\">\n              {withdrawalMethods.map(method => (\n                <div\n                  key={method.id}\n                  className={`relative border-2 rounded-xl p-4 cursor-pointer transition-all ${\n                    selectedMethod === method.id\n                      ? 'border-blue-500 bg-blue-50'\n                      : method.available\n                      ? 'border-gray-200 hover:border-gray-300'\n                      : 'border-gray-100 bg-gray-50 cursor-not-allowed opacity-60'\n                  }`}\n                  onClick={() => method.available && setSelectedMethod(method.id)}\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center\">\n                      <span className=\"text-2xl mr-3\">{method.icon}</span>\n                      <div>\n                        <h3 className=\"font-semibold text-gray-900\">{method.name}</h3>\n                        <p className=\"text-sm text-gray-600\">{method.description}</p>\n                        <div className=\"flex items-center text-xs text-gray-500 mt-1\">\n                          <span>Min: {method.minAmount}</span>\n                          <span className=\"mx-2\">•</span>\n                          <span>Max: {method.maxAmount}</span>\n                          <span className=\"mx-2\">•</span>\n                          <span>Fee: {method.fee} coins</span>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"text-right\">\n                      <div className=\"text-sm font-medium text-gray-700\">{method.processingTime}</div>\n                      {!method.available && (\n                        <div className=\"text-xs text-red-500 mt-1\">Coming Soon</div>\n                      )}\n                    </div>\n                  </div>\n                  \n                  {selectedMethod === method.id && (\n                    <div className=\"absolute top-2 right-2\">\n                      <div className=\"w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center\">\n                        <span className=\"text-white text-sm\">✓</span>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Amount Input */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Withdrawal Amount\n            </label>\n            <div className=\"relative\">\n              <input\n                type=\"number\"\n                value={amount}\n                onChange={(e) => setAmount(e.target.value)}\n                placeholder=\"Enter amount\"\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                min={selectedMethodData?.minAmount || 1}\n                max={selectedMethodData?.maxAmount || balance}\n              />\n              <div className=\"absolute right-3 top-3 text-gray-500\">coins</div>\n            </div>\n            {selectedMethodData && (\n              <div className=\"mt-2 text-sm text-gray-600\">\n                Available: {balance} coins • Min: {selectedMethodData.minAmount} • Max: {selectedMethodData.maxAmount}\n                {selectedMethodData.fee > 0 && (\n                  <span className=\"text-orange-600\"> • Fee: {selectedMethodData.fee} coins</span>\n                )}\n              </div>\n            )}\n          </div>\n\n          {/* Address Input */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              {selectedMethod === 'telegram_stars' ? 'Telegram Username' : 'Wallet Address'}\n            </label>\n            <input\n              type=\"text\"\n              value={address}\n              onChange={(e) => setAddress(e.target.value)}\n              placeholder={\n                selectedMethod === 'telegram_stars' \n                  ? '@username or user ID' \n                  : selectedMethod === 'ton_wallet'\n                  ? 'UQD...'\n                  : 'Enter wallet address'\n              }\n              className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            />\n          </div>\n\n          {/* Summary */}\n          {selectedMethodData && amount && parseInt(amount) > 0 && (\n            <div className=\"bg-gray-50 rounded-xl p-4\">\n              <h4 className=\"font-medium text-gray-800 mb-2\">Withdrawal Summary</h4>\n              <div className=\"space-y-1 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Amount:</span>\n                  <span className=\"font-medium\">{parseInt(amount)} coins</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Fee:</span>\n                  <span className=\"font-medium\">{selectedMethodData.fee} coins</span>\n                </div>\n                <div className=\"flex justify-between border-t pt-1 mt-2\">\n                  <span className=\"text-gray-800 font-medium\">Total Deducted:</span>\n                  <span className=\"font-bold\">{parseInt(amount) + selectedMethodData.fee} coins</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">You'll receive:</span>\n                  <span className=\"font-medium text-green-600\">{parseInt(amount)} coins</span>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Error/Success Messages */}\n          {error && (\n            <div className=\"p-4 bg-red-50 border border-red-200 rounded-xl\">\n              <p className=\"text-red-600 text-sm\">{error}</p>\n            </div>\n          )}\n\n          {success && (\n            <div className=\"p-4 bg-green-50 border border-green-200 rounded-xl\">\n              <p className=\"text-green-600 text-sm\">{success}</p>\n            </div>\n          )}\n\n          {/* Submit Button */}\n          <button\n            type=\"submit\"\n            disabled={loading || !selectedMethod || !amount || !address}\n            className=\"w-full bg-blue-600 text-white px-6 py-4 rounded-xl font-semibold hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 transform hover:scale-105 active:scale-95\"\n          >\n            {loading ? (\n              <div className=\"flex items-center justify-center\">\n                <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2\"></div>\n                Processing...\n              </div>\n            ) : (\n              'Submit Withdrawal Request'\n            )}\n          </button>\n        </form>\n      </div>\n\n      {/* Withdrawal History */}\n      {withdrawalHistory.length > 0 && (\n        <div className=\"bg-white rounded-2xl shadow-sm p-6\">\n          <h3 className=\"text-lg font-semibold mb-4 text-gray-800\">\n            Withdrawal History ({withdrawalHistory.length})\n          </h3>\n          \n          <div className=\"space-y-3\">\n            {withdrawalHistory.map(withdrawal => (\n              <div key={withdrawal.id} className=\"flex justify-between items-center p-4 bg-gray-50 rounded-xl\">\n                <div className=\"flex items-center\">\n                  <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center mr-3\">\n                    <span className=\"text-blue-600\">\n                      {withdrawalMethods.find(m => m.id === withdrawal.method)?.icon || '💰'}\n                    </span>\n                  </div>\n                  <div>\n                    <p className=\"font-medium text-gray-900\">\n                      {withdrawal.amount.toLocaleString()} coins\n                    </p>\n                    <div className=\"flex items-center text-xs text-gray-500\">\n                      <span>{formatDate(withdrawal.created_at)}</span>\n                      <span className=\"mx-2\">•</span>\n                      <span>{withdrawalMethods.find(m => m.id === withdrawal.method)?.name}</span>\n                    </div>\n                    <p className=\"text-xs text-gray-500 truncate max-w-32\">\n                      {withdrawal.address}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"text-right\">\n                  <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(withdrawal.status)}`}>\n                    {withdrawal.status}\n                  </span>\n                  {withdrawal.fee > 0 && (\n                    <p className=\"text-xs text-gray-500 mt-1\">Fee: {withdrawal.fee}</p>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Important Notes */}\n      <div className=\"bg-yellow-50 border border-yellow-200 rounded-2xl p-6\">\n        <h4 className=\"font-semibold text-yellow-800 mb-3\">⚠️ Important Notes</h4>\n        <ul className=\"text-sm text-yellow-700 space-y-2\">\n          <li>• Withdrawals are processed manually and may take up to 24 hours</li>\n          <li>• Double-check your wallet address before submitting</li>\n          <li>• Minimum withdrawal amounts apply to cover network fees</li>\n          <li>• Failed withdrawals will be refunded to your balance</li>\n          <li>• Contact support if you don't receive your withdrawal within 48 hours</li>\n        </ul>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3740, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\nimport TelegramService from '@/lib/telegram'\nimport { TelegramUser } from '@/types/telegram'\nimport AdComponent from '@/components/AdComponent'\nimport TaskList from '@/components/TaskList'\nimport Wallet from '@/components/Wallet'\nimport Referrals from '@/components/Referrals'\nimport Withdraw from '@/components/Withdraw'\n\ntype TabType = 'dashboard' | 'tasks' | 'wallet' | 'referrals' | 'withdraw'\n\nexport default function Home() {\n  const [user, setUser] = useState<TelegramUser | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [activeTab, setActiveTab] = useState<TabType>('dashboard')\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n\n  useEffect(() => {\n    initializeApp()\n  }, [])\n\n  const initializeApp = async () => {\n    try {\n      setLoading(true)\n      setError(null)\n\n      // Initialize Telegram WebApp\n      const telegramService = TelegramService.getInstance()\n      telegramService.initialize()\n\n      // Check if running in Telegram\n      if (!telegramService.isReady()) {\n        setError('This app must be opened through Telegram')\n        setLoading(false)\n        return\n      }\n\n      // Get user from Telegram\n      const telegramUser = telegramService.getUser()\n      if (!telegramUser) {\n        setError('Unable to get user information from Telegram')\n        setLoading(false)\n        return\n      }\n\n      setUser(telegramUser)\n\n      // Authenticate with backend\n      const initData = telegramService.getInitData()\n      if (!initData) {\n        setError('No initialization data available')\n        setLoading(false)\n        return\n      }\n\n      const response = await fetch('/api/auth/telegram', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ initData }),\n      })\n\n      if (!response.ok) {\n        const errorData = await response.json()\n        throw new Error(errorData.error || 'Authentication failed')\n      }\n\n      const authData = await response.json()\n      setIsAuthenticated(true)\n      \n      // Trigger success haptic feedback\n      telegramService.triggerNotificationFeedback('success')\n\n    } catch (err) {\n      console.error('App initialization error:', err)\n      setError(err instanceof Error ? err.message : 'An error occurred during initialization')\n      \n      // Trigger error haptic feedback\n      const telegramService = TelegramService.getInstance()\n      telegramService.triggerNotificationFeedback('error')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleTabChange = (tab: TabType) => {\n    setActiveTab(tab)\n    \n    // Trigger haptic feedback on tab change\n    const telegramService = TelegramService.getInstance()\n    telegramService.triggerHapticFeedback('light')\n  }\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center\">\n        <div className=\"text-center p-8\">\n          <div className=\"animate-spin rounded-full h-16 w-16 border-b-4 border-blue-600 mx-auto mb-4\"></div>\n          <h2 className=\"text-xl font-semibold text-gray-800 mb-2\">Loading TapWave</h2>\n          <p className=\"text-gray-600\">Initializing your experience...</p>\n        </div>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-red-50 to-pink-100 flex items-center justify-center\">\n        <div className=\"text-center p-8 bg-white rounded-2xl shadow-lg max-w-md mx-4\">\n          <div className=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n            <span className=\"text-red-600 text-2xl\">⚠️</span>\n          </div>\n          <h2 className=\"text-xl font-semibold text-red-600 mb-2\">Error</h2>\n          <p className=\"text-gray-600 mb-4\">{error}</p>\n          <button\n            onClick={initializeApp}\n            className=\"bg-red-600 text-white px-6 py-2 rounded-lg font-medium hover:bg-red-700 transition-colors\"\n          >\n            Try Again\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100\">\n      {/* Header */}\n      <header className=\"bg-white shadow-sm border-b sticky top-0 z-10\">\n        <div className=\"px-4 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-2xl font-bold bg-gradient-to-r from-blue-600 to-indigo-600 bg-clip-text text-transparent\">\n                TapWave\n              </h1>\n              {user && (\n                <p className=\"text-sm text-gray-600\">\n                  Welcome, {user.first_name}! 👋\n                </p>\n              )}\n            </div>\n            <div className=\"text-right\">\n              <div className=\"text-xs text-gray-500\">Status</div>\n              <div className=\"flex items-center\">\n                <div className=\"w-2 h-2 bg-green-500 rounded-full mr-2\"></div>\n                <span className=\"text-sm font-medium text-green-600\">Online</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Navigation */}\n      <nav className=\"bg-white border-b sticky top-16 z-10\">\n        <div className=\"flex overflow-x-auto scrollbar-hide\">\n          {[\n            { id: 'dashboard', label: 'Dashboard', emoji: '🏠' },\n            { id: 'tasks', label: 'Tasks', emoji: '📋' },\n            { id: 'wallet', label: 'Wallet', emoji: '💰' },\n            { id: 'referrals', label: 'Referrals', emoji: '👥' },\n            { id: 'withdraw', label: 'Withdraw', emoji: '💸' },\n          ].map((tab) => (\n            <button\n              key={tab.id}\n              onClick={() => handleTabChange(tab.id as TabType)}\n              className={`flex-shrink-0 px-4 py-3 text-sm font-medium whitespace-nowrap transition-all duration-200 ${\n                activeTab === tab.id\n                  ? 'text-blue-600 border-b-2 border-blue-600 bg-blue-50'\n                  : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'\n              }`}\n            >\n              <span className=\"mr-2\">{tab.emoji}</span>\n              {tab.label}\n            </button>\n          ))}\n        </div>\n      </nav>\n\n      {/* Main Content */}\n      <main className=\"p-4 pb-20\">\n        {activeTab === 'dashboard' && (\n          <div className=\"space-y-6\">\n            <div className=\"bg-white rounded-2xl shadow-sm p-6\">\n              <h2 className=\"text-xl font-semibold mb-4 text-gray-800\">\n                Welcome to TapWave! 🌊\n              </h2>\n              <p className=\"text-gray-600 mb-6\">\n                Watch ads, complete tasks, and earn rewards. Your earnings will be credited to your wallet instantly.\n              </p>\n              \n              {/* Quick Stats */}\n              <div className=\"grid grid-cols-2 gap-4 mb-6\">\n                <div className=\"bg-gradient-to-r from-blue-500 to-blue-600 rounded-xl p-4 text-white\">\n                  <div className=\"text-2xl font-bold\">0</div>\n                  <div className=\"text-sm opacity-90\">Total Earned</div>\n                </div>\n                <div className=\"bg-gradient-to-r from-green-500 to-green-600 rounded-xl p-4 text-white\">\n                  <div className=\"text-2xl font-bold\">0</div>\n                  <div className=\"text-sm opacity-90\">Tasks Completed</div>\n                </div>\n              </div>\n\n              <AdComponent />\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'tasks' && <TaskList />}\n        {activeTab === 'wallet' && <Wallet />}\n        {activeTab === 'referrals' && <Referrals />}\n        {activeTab === 'withdraw' && <Withdraw />}\n      </main>\n\n      {/* Bottom Safe Area */}\n      <div className=\"h-8 bg-transparent\"></div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}